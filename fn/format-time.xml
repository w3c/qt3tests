<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-format-time"  covers-30="fn-format-time">
   <description>Tests for the format-time() function transferred from XSLT 2.0 to XPath 3.0</description>
   
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-format-time"/>
   <dependency type="spec" value="XP30+ XQ30+"/>

   <test-case name="format-time-002a">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H01]:[m01]")</test>
      <result>
         <assert-string-value>09:15</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002b">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H]:[m]")</test>
      <result>
         <assert-string-value>9:15</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002c">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H01]:[m01]:[s01]")</test>
      <result>
         <assert-string-value>09:15:06</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002d">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H]:[m]:[s]")</test>
      <result>
         <assert-string-value>9:15:06</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002e">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H]:[m]:[s1]")</test>
      <result>
         <assert-string-value>9:15:6</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002f">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H]:[m]:[s01]:[f001]")</test>
      <result>
         <assert-string-value>9:15:06:456</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002g" covers="format-ms">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t,"[H]:[m]:[s].[f,1-1]")</test>
      <result>
         <assert-string-value>9:15:06.4</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002h" covers="format-ms">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t,"[H]:[m]:[s].[f1,1-1]")</test>
      <result>
         <assert-string-value>9:15:06.4</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002i" covers="format-ms">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t,"[H]:[m]:[s].[f01]")</test>
      <result>
         <assert-string-value>9:15:06.45</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-002j">
      <description>Test format-time: basic numeric formats</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t,"[H]:[m]:[s].[f001]")</test>
      <result>
         <assert-string-value>9:15:06.456</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-004">
      <description>Test format-time: 12-hour clock</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>
        for $i in 1 to 24 return
        format-time($t + xs:dayTimeDuration('PT1H')*$i, '[h].[m]')</test>
      <result>
         <assert-string-value normalize-space="true">
         10.15 11.15 12.15 1.15 2.15 3.15 4.15 5.15 6.15 7.15 8.15 9.15 10.15 11.15 
         12.15 1.15 2.15 3.15 4.15 5.15 6.15 7.15 8.15 9.15
         </assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013n">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t, '[m,3]')</test>
      <result>
         <assert-string-value>015</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013p">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t, '[f,4-4]')</test>
      <result>
         <assert-string-value>4560</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013q">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t, '[f,1-4]')</test>
      <result>
         <assert-string-value>456</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013r">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t, '[f,2-5]')</test>
      <result>
         <assert-string-value>456</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013s" covers="format-ms">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t, '[f,2-2]')</test>
      <result>
         <assert-string-value>45</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013t">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t, '[f,1-*]')</test>
      <result>
         <assert-string-value>456</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013u" covers="format-ms">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t, '[f,*-2]')</test>
      <result>
         <assert-string-value>45</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-013v">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456')"/>
      </environment>
      <test>format-time($t, '[f,3]')</test>
      <result>
         <assert-string-value>456</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-014">
      <description>test format-time(): timezones in +nn:nn notation</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="O'Neil Delpratt, Saxonica" on="2012-08-08" change="Bug fix 17285"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456Z')"/>
      </environment>
      <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone(
               $t, $z*xs:dayTimeDuration('PT30M')), '[h01][m01][Z]'), '; ')</test>
      <result>
         <assert-string-value normalize-space="true">
             0715-14:00; 0745-13:30; 0815-13:00; 0845-12:30; 0915-12:00; 0945-11:30; 1015-11:00; 1045-10:30; 1115-10:00; 
             1145-09:30; 1215-09:00; 1245-08:30; 0115-08:00; 0145-07:30; 0215-07:00; 0245-06:30; 0315-06:00; 0345-05:30; 
             0415-05:00; 0445-04:30; 0515-04:00; 0545-03:30; 0615-03:00; 0645-02:30; 0715-02:00; 0745-01:30; 0815-01:00; 
             0845-00:30; 0915+00:00; 0945+00:30; 1015+01:00; 1045+01:30; 1115+02:00; 1145+02:30; 1215+03:00; 1245+03:30;
             0115+04:00; 0145+04:30; 0215+05:00; 0245+05:30; 0315+06:00; 0345+06:30; 0415+07:00; 0445+07:30; 0515+08:00; 
             0545+08:30; 0615+09:00; 0645+09:30; 0715+10:00; 0745+10:30; 0815+11:00; 0845+11:30; 0915+12:00; 0945+12:30; 
             1015+13:00; 1045+13:30; 1115+14:00
         </assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-015">
      <description>test format-time(): timezones in GMT+x notation</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="O'Neil Delpratt, Saxonica" on="2012-08-08" change="Bug fix 17285"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456Z')"/>
      </environment>
      <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone(
                        $t, $z*xs:dayTimeDuration('PT30M')), '[h01][m01][z]'), '; ')</test>
      <result>
         <assert-string-value normalize-space="true">
            0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         </assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-016">
      <description>test format-time(): timezones in GMT+x notation</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="O'Neil Delpratt, Saxonica" on="2012-08-08" change="Bug fix 17285"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456Z')"/>
      </environment>
      <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone(
                        $t, $z*xs:dayTimeDuration('PT30M')), '[h01][m01][z,6-6]'), '; ')</test>
      <result>
         <assert-string-value normalize-space="true">
             0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
        </assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-017">
      <description>test format-time(): timezones in GMT+x notation</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="O'Neil Delpratt, Saxonica" on="2012-08-08" change="Bug fix 17285"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456Z')"/>
      </environment>
      <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone($t, $z*xs:dayTimeDuration('PT30M')), '[h01][m01][z,5-6]'), '; ')</test>
      <result>
         <assert-string-value normalize-space="true">
             0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         </assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-018">
      <description>test format-time(): timezones in GMT+x notation</description>
      <created by="Michael Kay, Saxonica" on="2011-07-01"/>
      <modified by="O'Neil Delpratt, Saxonica" on="2012-08-08" change="Bug fix 17285"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.456Z')"/>
      </environment>
      <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone($t, $z*xs:dayTimeDuration('PT30M')), '[h01][m01][z,2-6]'), '; ')</test>
      <result>
         <assert-string-value normalize-space="true">
              0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         </assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-019">
      <description>Test format-time: fractional seconds in Thai digits</description>
      <created by="Debbie Lockett, Saxonica" on="2015-11-16"/>
      <test>format-time(xs:time('09:15:06.456'),"[f&#3664;&#3664;&#3664;]")</test>
      <result>
         <assert-string-value>&#3668;&#3669;&#3670;</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-020">
      <description>Test format-time: non-ASCII digits</description>
      <created by="Debbie Lockett, Saxonica" on="2015-11-16"/>
      <test>format-time(xs:time('09:15:06.456'),"[H&#x660;]:[m&#x660;]:[s&#x660;&#x660;]:[f&#x660;&#x660;&#x660;]")</test>
      <result>
         <assert-string-value>&#x669;:&#x661;&#x665;:&#x660;&#x666;:&#x664;&#x665;&#x666;</assert-string-value>
      </result>
   </test-case>

   <test-case name="format-time-021">
      <description>Test format-time: am/Am/AM</description>
      <created by="Josh Spiegel" on="2016-03-11"/>
      <modified by="Debbie Lockett, Saxonica" on="2016-05-04" change="Add alternate results (bug 29599)"/>
      <test>format-time(xs:time('09:15:06.456'),"[Pn]/[PNn]/[PN]")</test>
      <result>
         <any-of>
            <assert-string-value>am/Am/AM</assert-string-value>
            <assert-string-value>a.m./A.M./A.M.</assert-string-value>
         </any-of>
      </result>
   </test-case>

   <test-case name="format-time-022">
      <description>Test format-time: pm/Pm/PM</description>
      <created by="Josh Spiegel" on="2016-03-11"/>
      <modified by="Debbie Lockett, Saxonica" on="2016-05-04" change="Add alternate results (bug 29599)"/>
      <test>format-time(xs:time('15:15:06.456'),"[Pn]/[PNn]/[PN]")</test>
      <result>
         <any-of>
            <assert-string-value>pm/Pm/PM</assert-string-value>
            <assert-string-value>p.m./P.M./P.M.</assert-string-value>
         </any-of>
      </result>
   </test-case>
   
   <test-case name="format-time-023p">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <test>format-time($t, '[f,4-4]')</test>
      <result>
         <assert-string-value>0060</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-023q">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <test>format-time($t, '[f,1-4]')</test>
      <result>
         <assert-string-value>006</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-023r">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <test>format-time($t, '[f,2-5]')</test>
      <result>
         <assert-string-value>006</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-023s" covers="format-ms">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t, '[f,2-2]')</test>
      <result>
         <assert-string-value>00</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-023t">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <test>format-time($t, '[f,1-*]')</test>
      <result>
         <assert-string-value>006</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-023u" covers="format-ms">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <modified by="Michael Kay, Saxonica" on="2016-07-26" change="bug 29749 changes from rounding to truncation"/>
      <modified by="Zachary Dean" on="2018-12-20" change="result can be '00' as well"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time($t, '[f,*-2]')</test>
      <result>
        <any-of>
          <assert-string-value>0</assert-string-value>
          <assert-string-value>00</assert-string-value>
        </any-of>
      </result>
   </test-case>
   
   <test-case name="format-time-023v">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.006')"/>
      </environment>
      <test>format-time($t, '[f,3]')</test>
      <result>
         <assert-string-value>006</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024p">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,4-4]')</test>
      <result>
         <assert-string-value>1000</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024q">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,1-4]')</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024r">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,2-5]')</test>
      <result>
         <assert-string-value>10</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024s">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,2-2]')</test>
      <result>
         <assert-string-value>10</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024t">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,1-*]')</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024u">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,*-2]')</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-024v">
      <description>test format-time(): effect of width specifiers </description>
      <created by="Debbie Lockett, Saxonica" on="2016-03-24"/>
      <environment>
         <param name="t" as="xs:time" select="xs:time('09:15:06.100')"/>
      </environment>
      <test>format-time($t, '[f,3]')</test>
      <result>
         <assert-string-value>100</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="format-time-025a">
      <description>
         Reproduce the table in section 9.8.4.6 of the spec    
      </description>
      <created by="Michael Kay, Saxonica" on="2018-04-25"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
         <out>{
           let $times := ('-10:00', '-05:00', 'Z', '+05:30', '+13:00') ! xs:time('12:00:00' || .)
           for $f in ('[Z]', '[Z0]', '[Z0:00]', '[Z00:00]', '[Z0000]', '[Z00:00t]', '[z]', '[ZZ]') 
              return <time format="{$f}">{
                 for $t in $times
                 return <s>{format-time($t, $f)}</s>
            }</time>   
         }</out>     
      ]]></test>
      <result>
         <assert-xml><![CDATA[<out><time format="[Z]"><s>-10:00</s><s>-05:00</s><s>+00:00</s><s>+05:30</s><s>+13:00</s></time
            ><time format="[Z0]"><s>-10</s><s>-5</s><s>+0</s><s>+5:30</s><s>+13</s></time
            ><time format="[Z0:00]"><s>-10:00</s><s>-5:00</s><s>+0:00</s><s>+5:30</s><s>+13:00</s></time
            ><time format="[Z00:00]"><s>-10:00</s><s>-05:00</s><s>+00:00</s><s>+05:30</s><s>+13:00</s></time
            ><time format="[Z0000]"><s>-1000</s><s>-0500</s><s>+0000</s><s>+0530</s><s>+1300</s></time
            ><time format="[Z00:00t]"><s>-10:00</s><s>-05:00</s><s>Z</s><s>+05:30</s><s>+13:00</s></time
            ><time format="[z]"><s>GMT-10:00</s><s>GMT-05:00</s><s>GMT+00:00</s><s>GMT+05:30</s><s>GMT+13:00</s></time
            ><time format="[ZZ]"><s>W</s><s>R</s><s>Z</s><s>+05:30</s><s>+13:00</s></time></out>
]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="format-time-025b">
      <description>
         Reproduce the table in section 9.8.4.6 of the spec (penultimate row)    
      </description>
      <created by="Michael Kay, Saxonica" on="2018-04-25"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
         <out>{
           let $times := ('-10:00', '-05:00', 'Z', '+05:30', '+13:00') ! xs:time('12:00:00' || .)
           for $f in ('[ZN]') 
              return <time format="{$f}">{
                 for $t in $times
                 return <s>{format-time($t, $f, (), (), "us")}</s>
            }</time>   
         }</out>     
      ]]></test>
      <result>
         <!-- Alternative results are possible, feel free to add them -->
         <all-of>
            <assert>$result/self::out/time/s[1] = 'HST'</assert>
            <assert>$result/self::out/time/s[2] = 'EST'</assert>
            <assert>$result/self::out/time/s[3] = ('GMT', 'UTC', 'Z')</assert>
            <assert>$result/self::out/time/s[4] = 'IST'</assert>
            <assert>$result/self::out/time/s[5] = '+13:00'</assert>
         </all-of>
      </result>
   </test-case>
      
      <test-case name="format-time-025c">
         <description>
            Reproduce the table in section 9.8.4.6 of the spec (last row)    
         </description>
         <created by="Michael Kay, Saxonica" on="2018-04-25"/>
         <dependency type="spec" value="XQ30+"/>
         <test><![CDATA[
         <out>{
           let $times := ('-10:00', '-05:00', 'Z', '+05:30', '+13:00') ! xs:time('12:00:00' || .)
           for $f in ('[H00]:[m00] [ZN]') 
              return <time format="{$f}">{
                 for $t in $times
                 return <s>{format-time($t, $f, (), (), "America/New_York")}</s>
            }</time>   
         }</out>     
      ]]></test>
         <result>
            <!-- Alternative results are possible, feel free to add them -->
            <all-of>
               <assert>$result/self::out/time/s[1] = '17:00 EST'</assert>
               <assert>$result/self::out/time/s[2] = '12:00 EST'</assert>
               <assert>$result/self::out/time/s[3] = '07:00 EST'</assert>
               <assert>$result/self::out/time/s[4] = '01:30 EST'</assert>
               <assert>$result/self::out/time/s[5] = '18:00 EST'</assert>
            </all-of>
         </result>
   </test-case>
   

   <test-case name="format-time-809err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <modified by="O'Neil Delpratt" on="2012-05-22" change="Bug fix related to bug #14875: Corrected error code"/>
      <test>format-time(current-time(), '[Y]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-810err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[M]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-811err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[d]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-812err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[d]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-813err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[F]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-814err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[W]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-815err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[w]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-816err">
      <description>Error XTDE1350 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <test>format-time(current-time(), '[E]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1350"/>
         <error code="FOFD1350"/>
        </any-of>
      </result>
   </test-case>

   <test-case name="format-time-817err">
      <description>Error XTDE1340 component in picture string not available in value</description>
      <created by="Anders Berglund" on="2011-07-01"/>
      <modified by="O'Neil Delpratt" on="2012-05-22" change="Bug fix related to bug #14875: Change description and corrected error code"/>
      <test>format-time(current-time(), '[bla]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1340"/>
         <error code="FOFD1340"/>
        </any-of>
      </result>
   </test-case>
   
   <test-case name="format-time-818err">
      <description>Error XTDE1340 invalid picture string</description>
      <created by="Michael Kay" on="2016-09-13"/>
      <test>format-time(current-time(), '[H9#]')</test>
      <result>
          <error code="FOFD1340"/>
      </result>
   </test-case>

   <test-case name="format-time-inpt-er1">
      <description>wrong arg input to format-time()</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <test>format-time('abc', '[bla]', 'en', (), ())</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="format-time-inpt-er2">
      <description>wrong number of args to format-time()</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <test>format-time(current-time(), '[bla]', 'en', (), (), 6)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="format-time-inpt-er3">
      <description>wrong number of args to format-time()</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <test>format-time(current-time(), '[bla]', 'en', (), (), 6)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="format-time-inpt-er4">
      <description>wrong number of args</description>
      <created by="Debbie Lockett, Saxonica" on="2016-04-27"/>
      <test>format-time(current-time(), "[H01]", "")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>


   <test-case name="format-time-1340err">
      <description>Error FOFD1340 syntax of picture is incorrect</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <test>format-time(current-time(), '[y]', 'en', (), ())</test>
      <result>
        <any-of>
         <error code="XTDE1340"/>
         <error code="FOFD1340"/>
        </any-of>
      </result>
   </test-case>
   
   <test-case name="millisecs-001">
      <description>Fractional seconds: default </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), '[f]')</test>
      <result>
         <assert-eq>"123"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-002">
      <description>Fractional seconds: explicit default </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), '[f1]')</test>
      <result>
         <assert-eq>"123"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-003">
      <description>Fractional seconds: two digits </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), '[f99]')</test>
      <result>
         <assert-eq>"12"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-004">
      <description>Fractional seconds: three digits </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), '[f001]')</test>
      <result>
         <assert-eq>"123"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-005">
      <description>Fractional seconds: optional digits </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), '[f99#]')</test>
      <result>
         <assert-eq>"123"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-006">
      <description>Fractional seconds: optional digits </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.12'), '[f99#]')</test>
      <result>
         <assert-eq>"12"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-007">
      <description>Fractional seconds: add trailing zeros  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.12'), '[f777]')</test>
      <result>
         <assert-eq>"120"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-008" covers="format-ms">
      <description>Fractional seconds: truncation  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time(xs:time('12:01:01.127'), '[f01]')</test>
      <result>
         <assert-eq>"12"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-009">
      <description>Fractional seconds: truncation  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.125'), '[f01]')</test>
      <result>
         <assert-eq>"12"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-010" covers="format-ms">
      <description>Fractional seconds: truncation </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>format-time(xs:time('12:01:01.135'), '[f01]')</test>
      <result>
         <assert-eq>"13"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-011">
      <description>Fractional seconds: grouping separators  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.135'), "[f0'0'0]")</test>
      <result>
         <assert-eq>"1'3'5"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-012">
      <description>Fractional seconds: irregular grouping separators  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.135'), "[f00'0]")</test>
      <result>
         <assert-eq>"13'5"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-013">
      <description>Fractional seconds: minimum width modifier  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.135'), "[f,6-*]")</test>
      <result>
         <assert-eq>"135000"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-014">
      <description>Fractional seconds: maximum width modifier  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.133'), "[f,*-2]")</test>
      <result>
         <assert-eq>"13"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-015">
      <description>Fractional seconds: min and maximum width modifier  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.133'), "[f,2-4]")</test>
      <result>
         <assert-eq>"133"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-016">
      <description>Fractional seconds: min and maximum width modifier  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01'), "[f,2-4]")</test>
      <result>
         <assert-eq>"00"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-017">
      <description>Fractional seconds: default, when value is zero  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01'), "[f]")</test>
      <result>
         <assert-eq>"0"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-018">
      <description>Fractional seconds: both width modifier and picture  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <modified by="Michael Kay" on="2016-09-13" change="see bug 29788"/>
      <test>format-time(xs:time('12:01:01.123'), "[f111,2-2]")</test>
      <result>
         <assert-eq>"123"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-019">
      <description>Fractional seconds: non-digit presentation modifier  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[fi]")</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   
   <test-case name="millisecs-020">
      <description>Fractional seconds: non-ascii digits  </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f&#x660;&#x660;&#x660;]")</test>
      <result>
         <assert-eq>"&#x661;&#x662;&#x663;"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-021">
      <description>Fractional seconds: non-ascii digits with grouping separators </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f&#x660;~&#x660;~&#x660;]")</test>
      <result>
         <assert-eq>"&#x661;~&#x662;~&#x663;"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-022">
      <description>Fractional seconds: rounding edge case - bug 29749 </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.999'), "[f99]")</test>
      <result>
         <assert-eq>"99"</assert-eq> <!-- to be confirmed -->
      </result>
   </test-case>
   
   <test-case name="millisecs-023">
      <description>Fractional seconds: whitespace within a variable marker is ignored </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[ f 0 0 0 ]")</test>
      <result>
         <assert-eq>"123"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-024">
      <description>Fractional seconds: both width modifier and picture  </description>
      <created by="Michael Kay" on="2016-09-13"/>
      <test>format-time(xs:time('12:01:01.189'), "[f&#x660;#,3-3]")</test>
      <result>
         <assert-eq>"&#x661;&#x668;&#x669;"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-025">
      <description>Fractional seconds: both width modifier and picture  </description>
      <created by="Michael Kay" on="2016-09-13"/>
      <test>format-time(xs:time('12:01:01.1'), "[f1###,3-3]")</test>
      <result>
         <assert-eq>"100"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-026">
      <description>Fractional seconds: both width modifier and picture  </description>
      <created by="Michael Kay" on="2016-09-13"/>
      <test>format-time(xs:time('12:01:01.5'), "[f1###,2-3]")</test>
      <result>
         <assert-eq>"50"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="millisecs-901">
      <description>Fractional seconds: invalid picture </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f#99]")</test>
      <result>
         <error code="FOFD1340"/>
      </result>
   </test-case>
   
   <test-case name="millisecs-902">
      <description>Fractional seconds: invalid width modifier </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f1,0-3]")</test>
      <result>
         <error code="FOFD1340"/>
      </result>
   </test-case>
   
   <test-case name="millisecs-903">
      <description>Fractional seconds: invalid width modifier </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f1,*-0]")</test>
      <result>
         <error code="FOFD1340"/>
      </result>
   </test-case>
   
   <test-case name="millisecs-904">
      <description>Fractional seconds: invalid width modifier </description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f1,3-2]")</test>
      <result>
         <error code="FOFD1340"/>
      </result>
   </test-case>
   
   <test-case name="millisecs-905">
      <description>Fractional seconds: invalid picture (mixed Unicode families)</description>
      <created by="Michael Kay" on="2016-07-21"/>
      <test>format-time(xs:time('12:01:01.123'), "[f#9&#x660;]")</test>
      <result>
         <error code="FOFD1340"/>
      </result>
   </test-case>
   

</test-set>
